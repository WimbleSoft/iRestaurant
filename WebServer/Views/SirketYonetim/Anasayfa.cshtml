@{
    ViewBag.Title = "Anasayfa";
    Layout = "~/Views/Shared/sirketYonetim_Layout.cshtml";
}
@model  iRestaurant.Controllers.ViewModelDemoVM

<script>
    document.getElementById("anasayfa").className = "active";
</script>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Anasayfa
        </h1>
        <ol class="breadcrumb">
            <li>
                <a href="#"><i class="fa fa-dashboard"></i> Anasayfa</a>
            </li>
        </ol>
    </section>
    @{
        DateTime sabahTarihSaat = DateTime.Now.Date.AddHours(3);//KASADA GÖZÜKEN O GÜN SABAH SAAT 6'DAN
        DateTime geceTarihSaat = DateTime.Now.Date.AddDays(1).AddHours(3);//KASADA GÖZÜKEN O GÜN GECE 24'TEN SONRAKİ 3 SAATE KADAR
        if (DateTime.Now.TimeOfDay <= new TimeSpan(3, 0, 0) && DateTime.Now.TimeOfDay >= new TimeSpan(0, 0, 0))
        {
            sabahTarihSaat = DateTime.Now.Subtract(new TimeSpan(24, 0, 0));
            geceTarihSaat = DateTime.Now.Subtract(new TimeSpan(24, 0, 0));
        }
    }
    <!-- Main content -->
    <section class="content">
        <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 ui-sortable">
            <!-- ŞUBE PERFORMANSI CHART -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <i class="fa fa-bar-chart-o"></i>
                    <h3 class="box-title">Siparişlerin Şubelere Göre Dağılımı</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="subePerformansi" style="height: 300px;"></div>
                </div>
            </div>
            <!-- // ŞUBE PERFORMANSI CHART \\-->
        </div>
        <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12 ui-sortable">
            <!-- HAFTALIK SİPARİŞ SAYISI YOĞUNLUK DAĞILIMI CHART -->
            <div class="box box-primary">
                <div class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Haftalık Yoğunluk Dağılımı</h3>

                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="chart">
                            <canvas id="haftalikYogunlukDagilimi" style="height:250px"></canvas>
                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
            <!-- HAFTALIK SİPARİŞ SAYISI YOĞUNLUK DAĞILIMI CHART -->
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ui-sortable">
            <!-- YILLIK AYLIK GÜNLÜK ÖDEME YÖNTEMİ YÜZDELERİ VE MİKTARLARI -->
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Yıl-Ay-Günlük Ödeme Yöntemi Miktarları</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="odemeYontemleriChart" style="height:230px"></canvas>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
    </div>
</section>
</div>
<script type="text/javascript" charset="utf-8">
    @{
        Random random = new Random();
    }
    $(function () {


        //--------------
        //- BAŞLA Haftalık Yoğunluk Miktarları -
        //--------------

        var areaChartData = {
            labels: [
                @for(int i=3;i>=-3; i--)
                {
                    <text>"@DateTime.Now.AddDays(-i).DayOfWeek",</text>
                }

            ],
            datasets: [
            @foreach (var sube in Model.Subeler.OrderBy(x => x.subeAd))
            {
                string colorSet = random.Next(50, 255)+","+ random.Next(50, 255)+","+ random.Next(50, 255);
                <text>
                {
                    label: "@sube.subeAd.Replace('ç', 'c').Replace('Ç', 'C').Replace('İ', 'I').Replace('ı', 'i').Replace('Ö', 'O').Replace('ö', 'o').Replace('Ü', 'U').Replace('ü', 'u').Replace('Ş', 'S').Replace('ş', 's')",
                          fillColor: "rgba(@colorSet,0.9)",
                          strokeColor: "rgba(@colorSet,0.8)",
                          pointColor: "rgba(@colorSet,1)",
                          pointStrokeColor: "rgba(@colorSet,1)",
                          pointHighlightFill: "rgba(@colorSet,0.9)",
                          pointHighlightStroke: "rgba(@colorSet,1)",
                          data: [
                                  @for(int i = 3; i >= -3; i--)
                                  {
                                      <text>
                                       "@Convert.ToInt32(
                                       sube.Siparisler.Where(x=>
                                           x.siparisTarihi.AddDays(i).DayOfYear == DateTime.Now.DayOfYear
                                        ).Count()
                                        )",
                                      </text>
                                  }
                          ]
                },
                </text>
            }
            ]
        };

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        };

        //Create the line chart
        //areaChart.Line(areaChartData, areaChartOptions);

        var lineChartCanvas = $("#haftalikYogunlukDagilimi").get(0).getContext("2d");
        var lineChart = new Chart(lineChartCanvas);
        var lineChartOptions = areaChartOptions;
        lineChartOptions.datasetFill = false;
        lineChart.Line(areaChartData, lineChartOptions);
        //-------------
        //- BİTİR Haftalık Yoğunluk Miktarları -
        //--------------

    });
</script>
<script>
    /*
    * BAŞLA Siparişlerin ŞUBELERE göre dağılımı
    * ---------
    */
    $(function () {
        var subeperformansverisi = {
            data: [
                @foreach (var a in Model.Siparisler.GroupBy(x => x.Subeler.subeAd))
                {
                    <text>["@a.Key - %@(Convert.ToDecimal(a.Count() * 100 / Model.Siparisler.Count))", @(Convert.ToDecimal(a.Count() * 100 / Model.Siparisler.Count))],</text>
                }
            ],
            color: "#3c8dbc"
        };
        $.plot("#subePerformansi", [subeperformansverisi], {
            grid: {
                borderWidth: 1,
                borderColor: "#f3f3f3",
                tickColor: "#f3f3f3"
            },
            series: {
                bars: {
                    show: true,
                    barWidth: 0.5,
                    align: "center"
                }
            },
            xaxis: {
                mode: "categories",
                tickLength: 0
            }
        });
    });
    /* 
    *BİTİR  Siparişlerin SUBELERE göre dağılımı
    * ------------
    */
</script>

<script type="text/javascript" charset="utf-8">

    //-------------
    //- Ödeme Yöntemleri CHART -
    //-------------
    var odemeYontemleriChartCanvas = $("#odemeYontemleriChart").get(0).getContext("2d");
    var odemeYontemleriChart = new Chart(odemeYontemleriChartCanvas);
    var odemeYontemleriChartData = {
        labels: [
            @foreach(var odemeTuru in Model.OdemeTurleri)
            {
                <text>
                "@odemeTuru.odemeTurAd",
                </text>
            }

    ],
    datasets: [
                  {
                      label: "Bugün",
                      fillColor: "rgba(60,141,188,0.9)",
                      strokeColor: "rgba(60,141,188,0.8)",
                      pointColor: "#3b8bba",
                      pointStrokeColor: "rgba(60,141,188,1)",
                      pointHighlightFill: "#fff",
                      pointHighlightStroke: "rgba(60,141,188,1)",
                      data: [
                                @foreach(var odemeTuru in Model.OdemeTurleri)
                                {
                                    <text>
                                    @odemeTuru.Odemeler.Where(x=>x.odemeTarihi >= sabahTarihSaat && x.odemeTarihi <= geceTarihSaat).Sum(x=>x.odemeMiktar),
                                    </text>
                                }
                            ]
                    },{
                      label: "Bu Ay",
                      fillColor: "rgba(60,141,188,0.9)",
                      strokeColor: "rgba(60,141,188,0.8)",
                      pointColor: "#3b8bba",
                      pointStrokeColor: "rgba(60,141,188,1)",
                      pointHighlightFill: "#fff",
                      pointHighlightStroke: "rgba(60,141,188,1)",
                      data: [

                                @foreach(var odemeTuru in Model.OdemeTurleri)
                                {
                                    <text>
                                    @odemeTuru.Odemeler.Where(x=>x.odemeTarihi.Year == DateTime.Now.Year && x.odemeTarihi.Month == DateTime.Now.Month).Sum(x=>x.odemeMiktar),
                                    </text>
                                }
                            ]
                    },
                    {
                        label: "Bu Yıl",
                        fillColor: "rgba(210, 214, 222, 1)",
                        strokeColor: "rgba(210, 214, 222, 1)",
                        pointColor: "rgba(210, 214, 222, 1)",
                        pointStrokeColor: "#c1c7d1",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(220,220,220,1)",
                        data:   [

                                @foreach(var odemeTuru in Model.OdemeTurleri)
                                {
                                    <text>
                                    @odemeTuru.Odemeler.Where(x=>x.odemeTarihi.Year == DateTime.Now.Year).Sum(x=>x.odemeMiktar),
                                    </text>
                                }
                            ]
                    }
            ]
    };
    odemeYontemleriChartData.datasets[1].fillColor = "#00a65a";
    odemeYontemleriChartData.datasets[1].strokeColor = "#00a65a";
    odemeYontemleriChartData.datasets[1].pointColor = "#00a65a";
    var odemeYontemleriChartOptions = {
        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero: true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,
        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",
        //Number - Width of the grid lines
        scaleGridLineWidth: 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,
        //Boolean - If there is a stroke on each bar
        barShowStroke: true,
        //Number - Pixel width of the bar stroke
        barStrokeWidth: 2,
        //Number - Spacing between each of the X value sets
        barValueSpacing: 5,
        //Number - Spacing between data sets within X values
        barDatasetSpacing: 1,
        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
        //Boolean - whether to make the chart responsive
        responsive: true,
        maintainAspectRatio: true
    };

    odemeYontemleriChartOptions.datasetFill = false;
    odemeYontemleriChart.Bar(odemeYontemleriChartData, odemeYontemleriChartOptions);
</script>
